{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst data = {\n  input: document.querySelector('#datetime-picker'),\n  btnStart: document.querySelector('button[data-start]'),\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n\nlet intervalId = null;\ndata.btnStart.disabled = true;\n\nflatpickr(data.input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n\n    if (selectedDates[0] <= new Date()) {\n      iziToast.error({\n        message: 'Please, choose a date in the future!',\n        position: 'topRight',\n      });\n    } else {\n      data.btnStart.disabled = false;\n    }\n  },\n});\n\ndata.btnStart.addEventListener('click', () => {\n  data.btnStart.disabled = true;\n  data.input.disabled = true;\n  intervalId = setInterval(() => {\n    const choosenDate = new Date(data.input.value);\n    const timeDifference = choosenDate - new Date();\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n    data.days.textContent = addLeadingZero(days);\n    data.hours.textContent = addLeadingZero(hours);\n    data.minutes.textContent = addLeadingZero(minutes);\n    data.seconds.textContent = addLeadingZero(seconds);\n\n        if (timeDifference < 1000) {\n          clearInterval(intervalId);\n          data.btnStart.disabled = false;\n        }\n      }, 1000);\n})\n\nfunction addLeadingZero(value) {\n  return `${value}`.padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n"],"names":["data","intervalId","flatpickr","selectedDates","iziToast","timeDifference","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"2GAKA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,SAAU,SAAS,cAAc,oBAAoB,EACrD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEA,IAAIC,EAAa,KACjBD,EAAK,SAAS,SAAW,GAEzBE,EAAUF,EAAK,MAAO,CACpB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQG,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAExBA,EAAc,CAAC,GAAK,IAAI,KAC1BC,EAAS,MAAM,CACb,QAAS,uCACT,SAAU,UAClB,CAAO,EAEDJ,EAAK,SAAS,SAAW,EAE5B,CACH,CAAC,EAEDA,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CA,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GACtBC,EAAa,YAAY,IAAM,CAE7B,MAAMI,EADc,IAAI,KAAKL,EAAK,MAAM,KAAK,EACR,IAAI,KACnC,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAElEL,EAAK,KAAK,YAAcW,EAAeL,CAAI,EAC3CN,EAAK,MAAM,YAAcW,EAAeJ,CAAK,EAC7CP,EAAK,QAAQ,YAAcW,EAAeH,CAAO,EACjDR,EAAK,QAAQ,YAAcW,EAAeF,CAAO,EAEzCJ,EAAiB,MACnB,cAAcJ,CAAU,EACxBD,EAAK,SAAS,SAAW,GAE5B,EAAE,GAAI,CACb,CAAC,EAED,SAASW,EAAeC,EAAO,CAC7B,MAAO,GAAGA,CAAK,GAAG,SAAS,EAAG,GAAG,CACnC,CAEA,SAASF,EAAUG,EAAI,CAOrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}